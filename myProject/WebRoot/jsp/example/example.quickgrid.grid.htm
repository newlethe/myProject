<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <title>MyHtml.html</title>
	
    <meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
    <meta http-equiv="description" content="this is my page">
    <meta http-equiv="content-type" content="text/html; charset=GBK">
    
    <script>
		
		//页面加载时先初始化tab
		window.onload = initgrid

		//////////////////////////////////////////////////////////////////////////////////////////////
		function initialise()
		//////////////////////////////////////////////////////////////////////////////////////////////
		{
			//主tab组
			with (document.all.dbnettab0)
			{
				//tabs定义说明：['tab的id', '名称', '加载grid的id', '关联grid的id']
				//加载grid的id可以为grid.id+".edit"，表示加载grid的编辑表单
				//加载grid的id可以为空，默认会显示loading grid
				//关联grid的id可以为空，但必须保证tab组中各tab包含的grid在页面加载时均能够完成加载
				tabs = [
				["tab0", "用户列表", "dbnetgrid0", ""]
				,["tab1", "其他", "dbnetgrid0.edit", ""]
				]
				
				//定义子tab组，定义说明：['父tab的id', '子tab组的id', '子tab组的初始化函数']
				detailTab = [["tab0","dbnettab1","dbnettab1_init"]]
				
				
				//设置主tab组加载完毕之后，加载grid
				onPageLoaded = initgrid
				
				//加载主tab组
				loadTab()
			}
		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////
		function dbnettab1_init()
		//////////////////////////////////////////////////////////////////////////////////////////////
		{
			with (document.all.dbnettab1)
			{
				//子tab组只需要定义tabs属性
				tabs = [
				["tab0", "角色", "dbnetgrid1", "dbnetgrid0"]
				]
			}
		}

		//////////////////////////////////////////////////////////////////////////////////////////////
		function initgrid()
		//////////////////////////////////////////////////////////////////////////////////////////////
		{
			with (document.all.dbnetgrid0)
			{
				connectionString = ""
				fromPart = "ROCK_USER"
				primaryKeyColumn = "USERID"
				orderColumn = "USERID"
				selectPart = ["USERID","REALNAME","SEX","USERACCOUNT"];
				headings = ["用户ID","姓名","性别","用户登陆帐号"];
				editFields = ["USERID","REALNAME","SEX","USERACCOUNT"];
				editLabels = ["用户ID","姓名","性别","用户登陆帐号"];
				//addDetailGrid(dbnetgrid1, 'USERID')
				pageSize = 10
				displayToolbar = true
				
				//应用grid新特性必需设置的属性
				integration = "true"

				//定义编辑表单的节
				editSections = [["主键",1,"100%"],["属性",2,"30%"],["测试",1,"70%"],["说明",2,"100%"]];

				//定义节包含的字段
				editSectionsFields = [["USERID"],["REALNAME"],["USERACCOUNT"],["SEX"]];
				
				//设置loadData后，如果不使用过滤器，设置为false则不显示过滤器行
				//filter = false
				
				//设置grid在页面加载时不显示数据，filterPart也可用于运行时动态过滤数据
				//filterPart = "1=2"

				//在grid的第一列增加行号
				addRowIndex = true
				
				//设置属性
				setColumnProperty("SEX", "transform:tsSex")
				setHeadingProperty("textAlign:left")
				
				//在grid的最后一列增加删除操作按钮
				//addRowDeletion = true
				
				//设置编辑表单与grid选择行时是否同步加载，该值默认为false
				//initEditSync = true
				
				//设置编辑表单在页面加载的时候是否显示
				//showEditOnLoaded = true
				
				//定义新建记录之前要执行的函数名，该函数在新建操作发生之前执行，返回布尔值以判断是否继续执行新建操作
				//insertValidation = "enableInsert"
				
				//定义在新建操作发生之前要执行的函数，该函数在新建操作发生之前执行
				//onBeforeEditInsert = myFun
				
				//定义页面pagetoolbar中的可选操作
				//pageMenu定义说明：[['序号','菜单关键字','所在tab']]
				//menuActions定义说明：menuActions['菜单关键字'] = ['关联的自定义函数名','功能说明']
				//序号，按字符串排序，两位数字一级，只支持两级
				pageMenu = [
				 ['11','LOCK','dbnettab0.tab0']
				,['12','UNLOCK','dbnettab0.tab0']
				,['13','BOOKMARK','dbnettab0.tab0']
				,['1301','BOOKMARK1','dbnettab0.tab0']
				,['1302','BOOKMARK2','dbnettab0.tab0']
				,['14','DELETE','all']
				]
				menuActions = new Array()
				menuActions["LOCK"] = ["freeze","锁定编辑"]
				menuActions["UNLOCK"] = ["unFreeze","解除锁定"]
				menuActions["BOOKMARK"] = ["myFun","添加到书签"]
				menuActions["BOOKMARK1"] = ["myFun","添加到我的书签"]
				menuActions["BOOKMARK2"] = ["myFun","添加到共有书签"]
				menuActions["DELETE"] = ["myFun","删除岗位"]
				
			}
			/*	
			with (document.all.dbnetgrid1)
			{
				fromPart = "ROCK_ROLE2USER"
				primaryKeyColumn = "USERID,ROLEPK"
				selectPart = ["USERID","ROLEPK","UNITID"];
				headings = ["用户ID","角色ID","单位ID"];
				editFields = ["用户ID","角色ID","单位ID"];
				editLabels = ["用户ID","角色ID","单位ID"];
				foreignKeyColumn = "USERID"
				pageSize = 10
				orderColumn = "USERID"
				setHeadingProperty("textAlign:left")
		
				integration = "true"
				displayToolbar = false
				addRowIndex = true
				addRowDeletion = true
				editSections = [["",1,"100%"],["Section1",1,"100%"]];
				editSectionsFields = [["ROLEPK","USERID"],["UNITID"]];
			}*/
			
			document.all.dbnetgrid0.loadData()

		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////
		function unFreeze()
		//////////////////////////////////////////////////////////////////////////////////////////////
		{
			document.all.dbnetgrid0.freezeEdit(true)
		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////
		function freeze()
		//////////////////////////////////////////////////////////////////////////////////////////////
		{
			document.all.dbnetgrid0.freezeEdit(false)
		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////
		function myFun()
		//////////////////////////////////////////////////////////////////////////////////////////////
		{
			alert('自定义功能')
		}
		
		function tsSex(cell){
			cell.innerText = cell.innerText == "1" ? "男" : "女"
		}
    
    </script>

  </head>
  
	<body topmargin=0 leftmargin=0 rightmargin=0 scroll=auto>
		<div class="mainpage">
			<div id="dbnetgrid0" style="behavior:url(/quickgrid/htc/dbnetgrid.htc);"></div>
		</div>
	</body>
</html>
